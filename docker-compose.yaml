version: "3.9"
services:
  connected_roots:
#    build:
#      context: ./
#      dockerfile: Dockerfile
    image: fuegolop/cinesaragon-backend:latest
    container_name: connected_roots
    hostname: connected_roots
    init: true
    restart: unless-stopped
    networks:
      - dev-network
    ports:
      - '47400:47400' # api
      - '47500:47500' # frontend
    expose:
      - '47400' # api
      - '47500' # frontend
    environment:
      - CONFIG_PATH=/data/configs/
      - APP_LOGLEVEL=debug
      - FRONTEND_TEMPLATES=/data/web/views
      - FRONTEND_ASSETS=/data/web/assets
      - FRONTEND_I18N_PATH=/data/web/i18n
      - DB_POSTGRES_DSN=postgres://connected_roots_role:Password1@postgres:5432/connected_roots?sslmode=disable&search_path=sc_connected_roots&connect_timeout=4
      - THIRD_SDK_VERBOSE=true
      - THIRD_SDK_CONNECTEDROOTSSERVICE_HOST=http://localhost:47400
      - MONITORING_OBSERVABILITY_OTEL_SDKDISABLED=false
      - MONITORING_OBSERVABILITY_OTEL_EXPORTEROTLENDPOINT=http://tempo:4318
    volumes:
      - ./configs/:/data/configs/

  postgres:
    image: postgres:16.3
    container_name: postgres
    hostname: postgres
    init: true
    restart: unless-stopped
    command: postgres -c 'max_connections=1000'
    volumes:
      - postgres-data:/var/lib/postgresql/data/
      - ./builder/postgresql:/docker-entrypoint-initdb.d
    networks:
      - dev-network
    ports:
      - '5432:5432'
    expose:
      - '5432'
    environment:
      POSTGRES_PASSWORD: Password1

  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - ./tempo-data:/var/tempo
    networks:
      - dev-network

  tempo:
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./configs/tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/var/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
    depends_on:
      - init
    networks:
      - dev-network

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
    volumes:
      - ./configs/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"
    networks:
      - dev-network

  grafana:
    image: grafana/grafana:11.0.0
    volumes:
      - ./configs/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor traceQLStreaming metricsSummary
    ports:
      - "3000:3000"
    networks:
      - dev-network

networks:
  dev-network:
    name: dev-network

volumes:
  postgres-data:
    driver: local
